package jDialog;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class PasswordTest extends JFrame implements ActionListener {
	
	private PanelHas쓰 panelHas쓰;
	
	private JTextArea notatnik;
	private JScrollPane scrollPane; //to jest tworzone do JTextArea
	private JButton bDodajU쯫tkownika;
	
	public PasswordTest()
	{
		setTitle("Demonstracja okna dialogowego");
		setSize(400,400);
		setLayout(null);
		
		notatnik = new JTextArea();
		notatnik.setWrapStyleWord(true); //powoduje 쯘 po doj띾iu do ko刃a lini przchodzi do nowej
		scrollPane = new JScrollPane(notatnik);
		scrollPane.setBounds(0 ,0, 300, 200);
		add(scrollPane);
		
		bDodajU쯫tkownika = new JButton("Dodaj u쯫tkownika");
		bDodajU쯫tkownika.setBounds(0 , 250, 150, 20);
		add(bDodajU쯫tkownika);
		bDodajU쯫tkownika.addActionListener(this);
		
		
	}
	

	public static void main(String[] args) {
		
		PasswordTest app = new PasswordTest();
		app.setDefaultCloseOperation(EXIT_ON_CLOSE);
		app.setVisible(true);
		
	
		
		

	}


	@Override
	public void actionPerformed(ActionEvent arg0) {
		
		if (panelHas쓰==null) 
			panelHas쓰 = new PanelHas쓰(this);
		panelHas쓰.setVisible(true);
		panelHas쓰.setFocus();
		
		if (panelHas쓰.isOK())
		{
			notatnik.append(panelHas쓰.getUser() + ", ");
			notatnik.append(panelHas쓰.getPassword() + "\n");
		}
		
	}

}

class PanelHas쓰 extends JDialog implements ActionListener {
	
	private JLabel lUser, lHas쓾;
	private JTextField tUser;
	private JPasswordField pHas쓾;
	private JButton bOK, bCancel;
	private boolean okData;
	
	
	public PanelHas쓰(JFrame owner)
	{
		super(owner, "Wprowadzenie has쓰", true);
		setSize(300,200);
		setLayout(null);
		
		lUser = new JLabel("U쯫tkownik", JLabel.RIGHT);
		lUser.setBounds(0, 10, 100, 20);
		add(lUser);
		
		tUser = new JTextField();
		tUser.setBounds(150, 10, 100, 20);
		add(tUser);
		
		lHas쓾 = new JLabel("Has쓾", JLabel.RIGHT);
		lHas쓾.setBounds(0, 50, 100, 20);
		add(lHas쓾);
		
		pHas쓾 = new JPasswordField();
		pHas쓾.setBounds(150, 50, 100, 20);
		add(pHas쓾);
		
		bOK = new JButton("OK");
		bOK.setBounds(10, 100, 100, 20);
		bOK.addActionListener(this);
		add(bOK);
		
		bCancel = new JButton("Cancel");
		bCancel.setBounds(150, 100, 100, 20);
		bCancel.addActionListener(this);
		add(bCancel);
		
		
	}
	
	public String getUser()
	{
		return tUser.getText();
	}
	
	public String getPassword()
	{
		return new String(pHas쓾.getPassword());
	}
	
	public boolean isOK()
	{
		return okData;
	}
	
	public void setFocus()
	{
		tUser.requestFocusInWindow();
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		Object source = e.getSource();
		if (source == bOK)
			okData = true;
		else
			okData = false;
		
		setVisible(false);
		
	}
	
	
	
	
	
	
	
}